#include<stack>
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL){
            vector<vector<int>> v;
            return v;
        }

        stack<TreeNode*> s1;
        stack<TreeNode*> s2;
        vector<vector<int>> v;
        s1.push(root);
        while(s1.size()!=0||s2.size()!=0){
            vector<int> j;
            if(s1.empty()&&!s2.empty()){
                while(!s2.empty()){
                    TreeNode*topNode = s2.top();
                    if(topNode->right){
                        s1.push(topNode->right);
                    }
                    if(topNode->left){
                        s1.push(topNode->left);
                    }
                    s2.pop();
                    j.push_back(topNode->val);
                }
                v.push_back(j);
            }else if(s2.empty()&&!s1.empty()){
                while(!s1.empty()){
                   TreeNode*topNode = s1.top();
                    if(topNode->left){
                        s2.push(topNode->left);
                    }
                    if(topNode->right){
                        s2.push(topNode->right);
                    }
                    s1.pop();
                    j.push_back(topNode->val); 
                }
                v.push_back(j);
            }
            
        }
        return v;
    }
};

Time Complexity -> O(N)
Space Complexity -> O(H)
