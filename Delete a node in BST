Expected Time Complexity: O(Height of the BST).
Expected Auxiliary Space: O(Height of the BST).

class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root==NULL){
            return NULL;
        }
        
        if(root->val>key){
            root->left =  deleteNode(root->left, key);
            return root;
        }else if(root->val<key){
            root->right =  deleteNode(root->right, key);
            return root;
        }else{
            if(root->left==NULL&&root->right==NULL){
                delete root;
                return NULL;
            }else if(root->left==NULL){
                TreeNode *temp = root->right;
                root->right = NULL;
                delete root;
                return temp;
            }else if(root->right==NULL){
                TreeNode *temp = root->left;
                root->left = NULL;
                delete root;
                return temp;
            }else{
                TreeNode* minRight = root->right;
                while(minRight->left!=NULL){
                    minRight = minRight->left;
                }
                root->val = minRight->val;
                root->right = deleteNode(root->right, minRight->val);
            }
        }
        return root;
    }
};
